@startuml Create New Ride Flow

actor Rider
actor Driver

' Driver->Rides: Set as active
' Rides->RidesDB: Update as active driver
' Rides->Location: Update driver's current location
' Location->LocationDB: Store driver location

Rider->Rides: Create new ride request
Rides->Location: Get nearest available drivers
Location->LocationDB: Query drivers
LocationDB-->Location: Return driver list
Location-->Rides: Return driver list
Rides->RidesDB: Store ride with status WAITING_FOR_DRIVER
Rides->Drivers: Publish ride request to driver list
Drivers-->Driver: Notify drivers

' alt Driver accept the request 
' Driver->Rides: Accept ride
' Rides->Rider: Notify matched driver
' end

' alt Customer accept the ride
' Customer->Service: Accept ride
' Service->DB: Update ride data
' Service->DB: Set driver as inactive
' Service->Cache: Remove available driver list
' Service->Driver: Notify to pickup Customer
' Service->Customer: Notify to wait for Driver
' else Customer reject the ride
' Customer->Service: Reject ride
' Service->DB: Update ride to be cancelled
' Service->Cache: Remove available driver from list
' Service->Driver: Notify rejected ride
' end

' else Driver reject the ride
' Driver->Service: Reject ride
' Service->Cache: Remove available driver from list
' Service->Cache: Get available drivers
' alt no drivers available in 10 minutes
' Service->DB: Update ride to be cancelled
' Service->Customer: Notify "Try Again later."
' end
' end

@enduml