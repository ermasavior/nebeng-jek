# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run gofmt to check code formatting
        run: gofmt -l -s -w .
  test:
      name: Test with Code Coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.22'
  
        - name: Install dependencies
          run: go mod tidy
  
        - name: Run tests with coverage
          run: go test -coverprofile=coverage.out ./internal/...
  
        - name: Upload coverage report
          uses: actions/upload-artifact@v4
          with:
            name: coverage
            path: coverage.out
  
        - name: Check code coverage
          run: |
            coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
            echo "Total coverage: $coverage%"
            if (( $(echo "$coverage < 80" | bc -l) )); then
              echo "Code coverage below threshold!" && exit 1
            fi
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...
